export const mockSP = { "data": [{ "expression": "hasRole('ROLE_ROOT') and #oauth2.hasScope('trust') and #oauth2.isUser()", "resourceId": "4", "path": "/auth-svc/clients/root", "method": "GET", "id": 0 }, { "expression": "hasRole('ROLE_USER') and #oauth2.hasScope('write') and #oauth2.isUser()", "resourceId": "4", "path": "/auth-svc/clients/user", "method": "GET", "id": 1 }, { "expression": "hasRole('ROLE_ROOT') and #oauth2.hasScope('trust') and #oauth2.isUser()", "resourceId": "4", "path": "/auth-svc/clients/root", "method": "POST", "id": 2 }, { "expression": "hasRole('ROLE_ROOT') and #oauth2.hasScope('trust') and #oauth2.isUser()", "resourceId": "4", "path": "/auth-svc/clients/root/**", "method": "PUT", "id": 3 }, { "expression": "hasRole('ROLE_ROOT') and #oauth2.hasScope('trust') and #oauth2.isUser()", "resourceId": "4", "path": "/auth-svc/clients/root/**", "method": "DELETE", "id": 4 }, { "expression": "hasRole('ROLE_FRONTEND') and hasRole('ROLE_FIRST_PARTY') and #oauth2.hasScope('write') and #oauth2.isClient()", "resourceId": "4", "path": "/auth-svc/users/public", "method": "POST", "id": 5 }, { "expression": "hasRole('ROLE_ADMIN') and #oauth2.hasScope('trust') and #oauth2.isUser()", "resourceId": "4", "path": "/auth-svc/users/admin", "method": "GET", "id": 6 }, { "expression": "hasRole('ROLE_ADMIN') and #oauth2.hasScope('trust') and #oauth2.isUser()", "resourceId": "4", "path": "/auth-svc/users/admin/**", "method": "PUT", "id": 7 }, { "expression": "hasRole('ROLE_ROOT') and #oauth2.hasScope('trust') and #oauth2.isUser()", "resourceId": "4", "path": "/auth-svc/users/admin/**", "method": "DELETE", "id": 8 }, { "expression": "hasRole('ROLE_USER') and #oauth2.hasScope('trust') and #oauth2.isUser()", "resourceId": "4", "path": "/auth-svc/users/user/pwd", "method": "PUT", "id": 9 }, { "expression": "hasRole('ROLE_USER') and #oauth2.hasScope('trust') and #oauth2.isUser()", "resourceId": "4", "path": "/auth-svc/authorize", "method": "POST", "id": 10 }, { "expression": "hasRole('ROLE_BACKEND') and hasRole('ROLE_FIRST_PARTY') and #oauth2.hasScope('read') and #oauth2.isClient()", "resourceId": "4", "path": "/auth-svc/users/app", "method": "GET", "id": 11 }, { "expression": "hasRole('ROLE_FRONTEND') and hasRole('ROLE_FIRST_PARTY') and #oauth2.hasScope('write') and #oauth2.isClient()", "resourceId": "4", "path": "/auth-svc/pending-users/public", "method": "POST", "id": 12 }, { "expression": "hasRole('ROLE_FRONTEND') and hasRole('ROLE_FIRST_PARTY') and #oauth2.hasScope('write') and #oauth2.isClient()", "resourceId": "4", "path": "/auth-svc/users/public/forgetPwd", "method": "POST", "id": 13 }, { "expression": "hasRole('ROLE_FRONTEND') and hasRole('ROLE_FIRST_PARTY') and #oauth2.hasScope('write') and #oauth2.isClient()", "resourceId": "4", "path": "/auth-svc/users/public/resetPwd", "method": "POST", "id": 14 }, { "resourceId": "4", "path": "/auth-svc/oauth/token", "method": "POST", "id": 15 }, { "expression": "(hasRole('ROLE_ROOT')) and #oauth2.hasScope('trust')", "resourceId": "11", "path": "/proxy/revoke-tokens/root", "method": "POST", "id": 16 }, { "expression": "hasRole('ROLE_ADMIN') and #oauth2.hasScope('trust')", "resourceId": "11", "path": "/proxy/revoke-tokens/admin", "method": "POST", "id": 17 }, { "expression": "hasRole('ROLE_ROOT') and #oauth2.hasScope('trust')", "resourceId": "11", "path": "/proxy/endpoints/root", "method": "POST", "id": 18 }, { "expression": "hasRole('ROLE_ROOT') and #oauth2.hasScope('trust')", "resourceId": "11", "path": "/proxy/endpoints/root", "method": "GET", "id": 19 }], "totalItemCount": 121 }